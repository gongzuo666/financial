{
  "uid" : "285aff22ae7bda18",
  "name" : "\"用户名不存在，输入密码\"",
  "fullName" : "test_login.TestLesson#test_login",
  "historyId" : "14c5c9791266446a8e113e81c6335669",
  "time" : {
    "start" : 1604630070321,
    "stop" : 1604630070350,
    "duration" : 29
  },
  "description" : "\n        用例描述：登录操作接口\n        ",
  "descriptionHtml" : "<pre><code>    用例描述：登录操作接口\n</code></pre>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert '4001' == '4000'\n  - 4000\n  ?    ^\n  + 4001\n  ?    ^",
  "statusTrace" : "self = <testCaseBranch.test_login.TestLesson object at 0x00000000049BAA90>, title = '\"用户名不存在，输入密码\"'\ninData = '{\"userType\": \"FINANCE\", \"username\": \"aaaaa\", \"password\": \"e10adc3949ba59abbe56e057f20f883e\", \"ledgerId\": 194}'\nexpectData = '{\"code\": \"4000\", \"msg\": \"没有查到账户信息\"}'\n\n    @allure.story('分公司登录')\n    @allure.title(\"{title}\")\n    @pytest.mark.parametrize('title,inData,expectData', get_yaml_data())\n    def test_login(self,title,inData,expectData):\n        '''\n        用例描述：登录操作接口\n        '''\n        # step_1(detail)\n        step_2(inData)\n        actualData = LoginClass().Total_Login(inData)\n        step_3(actualData, expectData)\n>       assert actualData['code'] == json.loads(expectData)['code']\nE       AssertionError: assert '4001' == '4000'\nE         - 4000\nE         ?    ^\nE         + 4001\nE         ?    ^\n\ntest_login.py:48: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "\n        用例描述：登录操作接口\n        ",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert '4001' == '4000'\n  - 4000\n  ?    ^\n  + 4001\n  ?    ^",
    "statusTrace" : "self = <testCaseBranch.test_login.TestLesson object at 0x00000000049BAA90>, title = '\"用户名不存在，输入密码\"'\ninData = '{\"userType\": \"FINANCE\", \"username\": \"aaaaa\", \"password\": \"e10adc3949ba59abbe56e057f20f883e\", \"ledgerId\": 194}'\nexpectData = '{\"code\": \"4000\", \"msg\": \"没有查到账户信息\"}'\n\n    @allure.story('分公司登录')\n    @allure.title(\"{title}\")\n    @pytest.mark.parametrize('title,inData,expectData', get_yaml_data())\n    def test_login(self,title,inData,expectData):\n        '''\n        用例描述：登录操作接口\n        '''\n        # step_1(detail)\n        step_2(inData)\n        actualData = LoginClass().Total_Login(inData)\n        step_3(actualData, expectData)\n>       assert actualData['code'] == json.loads(expectData)['code']\nE       AssertionError: assert '4001' == '4000'\nE         - 4000\nE         ?    ^\nE         + 4001\nE         ?    ^\n\ntest_login.py:48: AssertionError",
    "steps" : [ {
      "name" : "步骤1:填写请求参数:inData",
      "time" : {
        "start" : 1604630070321,
        "stop" : 1604630070322,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "inData",
        "value" : "'{\"userType\": \"FINANCE\", \"username\": \"aaaaa\", \"password\": \"e10adc3949ba59abbe56e057f20f883e\", \"ledgerId\": 194}'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "步骤2:对比实际结果:resdata与预期结果:repsData",
      "time" : {
        "start" : 1604630070345,
        "stop" : 1604630070347,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "resdata",
        "value" : "{'code': '4001', 'msg': '没有查到账户信息', 'data': {}}"
      }, {
        "name" : "repsData",
        "value" : "'{\"code\": \"4000\", \"msg\": \"没有查到账户信息\"}'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "登录"
  }, {
    "name" : "story",
    "value" : "分公司登录"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLesson"
  }, {
    "name" : "host",
    "value" : "SKY-20170828DBR"
  }, {
    "name" : "thread",
    "value" : "19112-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "expectData",
    "value" : "'{\"code\": \"4000\", \"msg\": \"没有查到账户信息\"}'"
  }, {
    "name" : "inData",
    "value" : "'{\"userType\": \"FINANCE\", \"username\": \"aaaaa\", \"password\": \"e10adc3949ba59abbe56e057f20f883e\", \"ledgerId\": 194}'"
  }, {
    "name" : "title",
    "value" : "'\"用户名不存在，输入密码\"'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "285aff22ae7bda18.json",
  "parameterValues" : [ "'{\"code\": \"4000\", \"msg\": \"没有查到账户信息\"}'", "'{\"userType\": \"FINANCE\", \"username\": \"aaaaa\", \"password\": \"e10adc3949ba59abbe56e057f20f883e\", \"ledgerId\": 194}'", "'\"用户名不存在，输入密码\"'" ]
}